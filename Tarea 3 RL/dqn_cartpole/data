{
    "policy_class": {
        ":type:": "<class 'abc.ABCMeta'>",
        ":serialized:": "gAWVMAAAAAAAAACMHnN0YWJsZV9iYXNlbGluZXMzLmRxbi5wb2xpY2llc5SMCURRTlBvbGljeZSTlC4=",
        "__module__": "stable_baselines3.dqn.policies",
        "__annotations__": "{'q_net': <class 'stable_baselines3.dqn.policies.QNetwork'>, 'q_net_target': <class 'stable_baselines3.dqn.policies.QNetwork'>}",
        "__doc__": "\n    Policy class with Q-Value Net and target net for DQN\n\n    :param observation_space: Observation space\n    :param action_space: Action space\n    :param lr_schedule: Learning rate schedule (could be constant)\n    :param net_arch: The specification of the policy and value networks.\n    :param activation_fn: Activation function\n    :param features_extractor_class: Features extractor to use.\n    :param features_extractor_kwargs: Keyword arguments\n        to pass to the features extractor.\n    :param normalize_images: Whether to normalize images or not,\n         dividing by 255.0 (True by default)\n    :param optimizer_class: The optimizer to use,\n        ``th.optim.Adam`` by default\n    :param optimizer_kwargs: Additional keyword arguments,\n        excluding the learning rate, to pass to the optimizer\n    ",
        "__init__": "<function DQNPolicy.__init__ at 0x0000029004D98040>",
        "_build": "<function DQNPolicy._build at 0x0000029004D980E0>",
        "make_q_net": "<function DQNPolicy.make_q_net at 0x0000029004D98180>",
        "forward": "<function DQNPolicy.forward at 0x0000029004D98220>",
        "_predict": "<function DQNPolicy._predict at 0x0000029004D982C0>",
        "_get_constructor_parameters": "<function DQNPolicy._get_constructor_parameters at 0x0000029004D98360>",
        "set_training_mode": "<function DQNPolicy.set_training_mode at 0x0000029004D98400>",
        "__abstractmethods__": "frozenset()",
        "_abc_impl": "<_abc._abc_data object at 0x0000029004D94540>"
    },
    "verbose": 1,
    "policy_kwargs": {},
    "num_timesteps": 1000,
    "_total_timesteps": 1000,
    "_num_timesteps_at_start": 0,
    "seed": null,
    "action_noise": null,
    "start_time": 1742846480948470300,
    "learning_rate": 0.0001,
    "tensorboard_log": null,
    "_last_obs": {
        ":type:": "<class 'numpy.ndarray'>",
        ":serialized:": "gAWVhQAAAAAAAACMEm51bXB5LmNvcmUubnVtZXJpY5SMC19mcm9tYnVmZmVylJOUKJYQAAAAAAAAANHiRT5MT+Q/Yt1Evt8xLsCUjAVudW1weZSMBWR0eXBllJOUjAJmNJSJiIeUUpQoSwOMATyUTk5OSv////9K/////0sAdJRiSwFLBIaUjAFDlHSUUpQu"
    },
    "_last_episode_starts": {
        ":type:": "<class 'numpy.ndarray'>",
        ":serialized:": "gAWVdAAAAAAAAACMEm51bXB5LmNvcmUubnVtZXJpY5SMC19mcm9tYnVmZmVylJOUKJYBAAAAAAAAAAGUjAVudW1weZSMBWR0eXBllJOUjAJiMZSJiIeUUpQoSwOMAXyUTk5OSv////9K/////0sAdJRiSwGFlIwBQ5R0lFKULg=="
    },
    "_last_original_obs": {
        ":type:": "<class 'numpy.ndarray'>",
        ":serialized:": "gAWVhQAAAAAAAACMEm51bXB5LmNvcmUubnVtZXJpY5SMC19mcm9tYnVmZmVylJOUKJYQAAAAAAAAADRfJT6WNss/JPMTvgLcGMCUjAVudW1weZSMBWR0eXBllJOUjAJmNJSJiIeUUpQoSwOMATyUTk5OSv////9K/////0sAdJRiSwFLBIaUjAFDlHSUUpQu"
    },
    "_episode_num": 99,
    "use_sde": false,
    "sde_sample_freq": -1,
    "_current_progress_remaining": 0.0,
    "_stats_window_size": 100,
    "ep_info_buffer": {
        ":type:": "<class 'collections.deque'>",
        ":serialized:": "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"
    },
    "ep_success_buffer": {
        ":type:": "<class 'collections.deque'>",
        ":serialized:": "gAWVIAAAAAAAAACMC2NvbGxlY3Rpb25zlIwFZGVxdWWUk5QpS2SGlFKULg=="
    },
    "_n_updates": 225,
    "observation_space": {
        ":type:": "<class 'gymnasium.spaces.box.Box'>",
        ":serialized:": "gAWV/gEAAAAAAACMFGd5bW5hc2l1bS5zcGFjZXMuYm94lIwDQm94lJOUKYGUfZQojAVkdHlwZZSMBW51bXB5lIwFZHR5cGWUk5SMAmY0lImIh5RSlChLA4wBPJROTk5K/////0r/////SwB0lGKMBl9zaGFwZZRLBIWUjANsb3eUjBJudW1weS5jb3JlLm51bWVyaWOUjAtfZnJvbWJ1ZmZlcpSTlCiWEAAAAAAAAACamZnAAACA/1B31r4AAID/lGgLSwSFlIwBQ5R0lFKUjA1ib3VuZGVkX2JlbG93lGgTKJYEAAAAAAAAAAEAAQCUaAiMAmIxlImIh5RSlChLA4wBfJROTk5K/////0r/////SwB0lGJLBIWUaBZ0lFKUjARoaWdolGgTKJYQAAAAAAAAAJqZmUAAAIB/UHfWPgAAgH+UaAtLBIWUaBZ0lFKUjA1ib3VuZGVkX2Fib3ZllGgTKJYEAAAAAAAAAAEAAQCUaB1LBIWUaBZ0lFKUjAhsb3dfcmVwcpSMMVstNC44ICAgICAgICAgICAgICAgLWluZiAtMC40MTg4NzkwMyAgICAgICAgLWluZl2UjAloaWdoX3JlcHKUjC1bNC44ICAgICAgICAgICAgICAgaW5mIDAuNDE4ODc5MDMgICAgICAgIGluZl2UjApfbnBfcmFuZG9tlE51Yi4=",
        "dtype": "float32",
        "_shape": [
            4
        ],
        "low": "[-4.8               -inf -0.41887903        -inf]",
        "bounded_below": "[ True False  True False]",
        "high": "[4.8               inf 0.41887903        inf]",
        "bounded_above": "[ True False  True False]",
        "low_repr": "[-4.8               -inf -0.41887903        -inf]",
        "high_repr": "[4.8               inf 0.41887903        inf]",
        "_np_random": null
    },
    "action_space": {
        ":type:": "<class 'gymnasium.spaces.discrete.Discrete'>",
        ":serialized:": "gAWVogEAAAAAAACMGWd5bW5hc2l1bS5zcGFjZXMuZGlzY3JldGWUjAhEaXNjcmV0ZZSTlCmBlH2UKIwBbpSMFW51bXB5LmNvcmUubXVsdGlhcnJheZSMBnNjYWxhcpSTlIwFbnVtcHmUjAVkdHlwZZSTlIwCaTiUiYiHlFKUKEsDjAE8lE5OTkr/////Sv////9LAHSUYkMIAgAAAAAAAACUhpRSlIwFc3RhcnSUaAhoDkMIAAAAAAAAAACUhpRSlIwGX3NoYXBllCmMBWR0eXBllGgOjApfbnBfcmFuZG9tlIwUbnVtcHkucmFuZG9tLl9waWNrbGWUjBBfX2dlbmVyYXRvcl9jdG9ylJOUjAVQQ0c2NJRoG4wUX19iaXRfZ2VuZXJhdG9yX2N0b3KUk5SGlFKUfZQojA1iaXRfZ2VuZXJhdG9ylIwFUENHNjSUjAVzdGF0ZZR9lChoJooRVOFPH/5ixY8EuE3kXUiK6gCMA2luY5SKEPdCbKPePMARDfQkSkcUgFR1jApoYXNfdWludDMylEsBjAh1aW50ZWdlcpRK/qjKU3VidWIu",
        "n": "2",
        "start": "0",
        "_shape": [],
        "dtype": "int64",
        "_np_random": "Generator(PCG64)"
    },
    "n_envs": 1,
    "buffer_size": 1000000,
    "batch_size": 32,
    "learning_starts": 100,
    "tau": 1.0,
    "gamma": 0.99,
    "gradient_steps": 1,
    "optimize_memory_usage": false,
    "replay_buffer_class": {
        ":type:": "<class 'abc.ABCMeta'>",
        ":serialized:": "gAWVNQAAAAAAAACMIHN0YWJsZV9iYXNlbGluZXMzLmNvbW1vbi5idWZmZXJzlIwMUmVwbGF5QnVmZmVylJOULg==",
        "__module__": "stable_baselines3.common.buffers",
        "__annotations__": "{'observations': <class 'numpy.ndarray'>, 'next_observations': <class 'numpy.ndarray'>, 'actions': <class 'numpy.ndarray'>, 'rewards': <class 'numpy.ndarray'>, 'dones': <class 'numpy.ndarray'>, 'timeouts': <class 'numpy.ndarray'>}",
        "__doc__": "\n    Replay buffer used in off-policy algorithms like SAC/TD3.\n\n    :param buffer_size: Max number of element in the buffer\n    :param observation_space: Observation space\n    :param action_space: Action space\n    :param device: PyTorch device\n    :param n_envs: Number of parallel environments\n    :param optimize_memory_usage: Enable a memory efficient variant\n        of the replay buffer which reduces by almost a factor two the memory used,\n        at a cost of more complexity.\n        See https://github.com/DLR-RM/stable-baselines3/issues/37#issuecomment-637501195\n        and https://github.com/DLR-RM/stable-baselines3/pull/28#issuecomment-637559274\n        Cannot be used in combination with handle_timeout_termination.\n    :param handle_timeout_termination: Handle timeout termination (due to timelimit)\n        separately and treat the task as infinite horizon task.\n        https://github.com/DLR-RM/stable-baselines3/issues/284\n    ",
        "__init__": "<function ReplayBuffer.__init__ at 0x0000029004CAE020>",
        "add": "<function ReplayBuffer.add at 0x0000029004CAE160>",
        "sample": "<function ReplayBuffer.sample at 0x0000029004CAE200>",
        "_get_samples": "<function ReplayBuffer._get_samples at 0x0000029004CAE2A0>",
        "_maybe_cast_dtype": "<staticmethod(<function ReplayBuffer._maybe_cast_dtype at 0x0000029004CAE340>)>",
        "__abstractmethods__": "frozenset()",
        "_abc_impl": "<_abc._abc_data object at 0x0000029004CA5F00>"
    },
    "replay_buffer_kwargs": {},
    "train_freq": {
        ":type:": "<class 'stable_baselines3.common.type_aliases.TrainFreq'>",
        ":serialized:": "gAWVYQAAAAAAAACMJXN0YWJsZV9iYXNlbGluZXMzLmNvbW1vbi50eXBlX2FsaWFzZXOUjAlUcmFpbkZyZXGUk5RLBGgAjBJUcmFpbkZyZXF1ZW5jeVVuaXSUk5SMBHN0ZXCUhZRSlIaUgZQu"
    },
    "use_sde_at_warmup": false,
    "exploration_initial_eps": 1.0,
    "exploration_final_eps": 0.05,
    "exploration_fraction": 0.1,
    "target_update_interval": 10000,
    "_n_calls": 1000,
    "max_grad_norm": 10,
    "exploration_rate": 0.05,
    "lr_schedule": {
        ":type:": "<class 'function'>",
        ":serialized:": "gAWV6QMAAAAAAACMF2Nsb3VkcGlja2xlLmNsb3VkcGlja2xllIwOX21ha2VfZnVuY3Rpb26Uk5QoaACMDV9idWlsdGluX3R5cGWUk5SMCENvZGVUeXBllIWUUpQoSwFLAEsASwFLBUsTQzSVAZcAdAEAAAAAAAAAAAAAAgCJAXwApgEAAKsBAAAAAAAAAACmAQAAqwEAAAAAAAAAAFMAlE6FlIwFZmxvYXSUhZSMEnByb2dyZXNzX3JlbWFpbmluZ5SFlIxcQzpcVXNlcnNcU1RcQXBwRGF0YVxSb2FtaW5nXFB5dGhvblxQeXRob24zMTFcc2l0ZS1wYWNrYWdlc1xzdGFibGVfYmFzZWxpbmVzM1xjb21tb25cdXRpbHMucHmUjAg8bGFtYmRhPpSMIWdldF9zY2hlZHVsZV9mbi48bG9jYWxzPi48bGFtYmRhPpRLYkMa+IAApWWoTqhO0DtN0SxO1CxO0SZP1CZPgACUQwCUjA52YWx1ZV9zY2hlZHVsZZSFlCl0lFKUfZQojAtfX3BhY2thZ2VfX5SMGHN0YWJsZV9iYXNlbGluZXMzLmNvbW1vbpSMCF9fbmFtZV9flIwec3RhYmxlX2Jhc2VsaW5lczMuY29tbW9uLnV0aWxzlIwIX19maWxlX1+UaA51Tk5oAIwQX21ha2VfZW1wdHlfY2VsbJSTlClSlIWUdJRSlGgAjBJfZnVuY3Rpb25fc2V0c3RhdGWUk5RoIn2UfZQoaBqMCDxsYW1iZGE+lIwMX19xdWFsbmFtZV9flIwhZ2V0X3NjaGVkdWxlX2ZuLjxsb2NhbHM+LjxsYW1iZGE+lIwPX19hbm5vdGF0aW9uc19flH2UjA5fX2t3ZGVmYXVsdHNfX5ROjAxfX2RlZmF1bHRzX1+UTowKX19tb2R1bGVfX5RoG4wHX19kb2NfX5ROjAtfX2Nsb3N1cmVfX5RoAIwKX21ha2VfY2VsbJSTlGgCKGgHKEsBSwBLAEsBSwFLE0MIlQGXAIkBUwCUaAkpjAFflIWUaA6MBGZ1bmOUjBljb25zdGFudF9mbi48bG9jYWxzPi5mdW5jlEuGQwj4gADYDxKICpRoEowDdmFslIWUKXSUUpRoF05OaB4pUpSFlHSUUpRoJGhAfZR9lChoGowEZnVuY5RoKIwZY29uc3RhbnRfZm4uPGxvY2Fscz4uZnVuY5RoKn2UaCxOaC1OaC5oG2gvTmgwaDJHPxo24uscQy2FlFKUhZSMF19jbG91ZHBpY2tsZV9zdWJtb2R1bGVzlF2UjAtfX2dsb2JhbHNfX5R9lHWGlIZSMIWUUpSFlGhJXZRoS32UdYaUhlIwLg=="
    },
    "batch_norm_stats": [],
    "batch_norm_stats_target": [],
    "exploration_schedule": {
        ":type:": "<class 'function'>",
        ":serialized:": "gAWVfQMAAAAAAACMF2Nsb3VkcGlja2xlLmNsb3VkcGlja2xllIwOX21ha2VfZnVuY3Rpb26Uk5QoaACMDV9idWlsdGluX3R5cGWUk5SMCENvZGVUeXBllIWUUpQoSwFLAEsASwFLBEsTQzyVA5cAZAF8AHoKAACJAmsEAAAAAHICiQFTAIkDZAF8AHoKAACJAYkDegoAAHoFAACJAnoLAAB6AAAAUwCUTksBhpQpjBJwcm9ncmVzc19yZW1haW5pbmeUhZSMXEM6XFVzZXJzXFNUXEFwcERhdGFcUm9hbWluZ1xQeXRob25cUHl0aG9uMzExXHNpdGUtcGFja2FnZXNcc3RhYmxlX2Jhc2VsaW5lczNcY29tbW9uXHV0aWxzLnB5lIwEZnVuY5SMG2dldF9saW5lYXJfZm4uPGxvY2Fscz4uZnVuY5RLdEM4+IAA2AwN0BAi0QwioGzSCzLQCzLYExaISuATGJhB0CAy0RwysHO4VbF70RtDwGzRG1LRE1LQDFKUQwCUjANlbmSUjAxlbmRfZnJhY3Rpb26UjAVzdGFydJSHlCl0lFKUfZQojAtfX3BhY2thZ2VfX5SMGHN0YWJsZV9iYXNlbGluZXMzLmNvbW1vbpSMCF9fbmFtZV9flIwec3RhYmxlX2Jhc2VsaW5lczMuY29tbW9uLnV0aWxzlIwIX19maWxlX1+UaAx1Tk5oAIwQX21ha2VfZW1wdHlfY2VsbJSTlClSlGgeKVKUaB4pUpSHlHSUUpRoAIwSX2Z1bmN0aW9uX3NldHN0YXRllJOUaCR9lH2UKGgajARmdW5jlIwMX19xdWFsbmFtZV9flIwbZ2V0X2xpbmVhcl9mbi48bG9jYWxzPi5mdW5jlIwPX19hbm5vdGF0aW9uc19flH2UKGgKjAhidWlsdGluc5SMBWZsb2F0lJOUjAZyZXR1cm6UaDB1jA5fX2t3ZGVmYXVsdHNfX5ROjAxfX2RlZmF1bHRzX1+UTowKX19tb2R1bGVfX5RoG4wHX19kb2NfX5ROjAtfX2Nsb3N1cmVfX5RoAIwKX21ha2VfY2VsbJSTlEc/qZmZmZmZmoWUUpRoOEc/uZmZmZmZmoWUUpRoOEc/8AAAAAAAAIWUUpSHlIwXX2Nsb3VkcGlja2xlX3N1Ym1vZHVsZXOUXZSMC19fZ2xvYmFsc19flH2UdYaUhlIwLg=="
    }
}